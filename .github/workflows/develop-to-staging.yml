name: Develop to Staging CI/CD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run unit tests
        run: npm run test:unit

      - name: Build for testing
        run: npm run build:test

  auto-merge-to-staging:
    name: Auto merge to staging
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Switch to staging branch
        run: |
          git fetch origin staging:staging
          git checkout staging

      - name: Merge develop into staging
        run: |
          git merge origin/develop --no-ff -m "chore: auto-merge develop to staging [skip ci]"

      - name: Switch environment config to test
        run: |
          if [ -f .env.test ]; then
            cp .env.test .env
            git add .env
            git commit -m "chore: switch to test environment config" || echo "No changes to commit"
          fi

      - name: Push to staging
        run: |
          git push origin staging

  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    needs: auto-merge-to-staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout staging branch
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for staging
        run: npm run build:test

      - name: Run staging tests
        run: |
          npm run dev:test &
          sleep 10
          curl -f http://localhost:3002 || exit 1
          pkill -f "npm run dev:test" || true

      - name: Notify success
        run: |
          echo "âœ… Staging deployment successful"
          echo "ðŸ”— Staging URL: http://localhost:3002 (in test environment)"
